/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import Source.DataBase;
import Source.Dokumen;
import Source.Proyek;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wahyu
 */
public class DialogHapusDokumentasi extends javax.swing.JDialog {

    /**
     * Creates new form HapusPetugas
     */
    DataBase db;
    private Dokumen dk = new Dokumen();
    Dokumen[] dkm;
    ResultSet rs;
    
    public DialogHapusDokumentasi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        ButtonData.addActionListener(new Data());
        ButtonHapus.addActionListener(new Hapus());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        FieldCari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel1 = new javax.swing.JTable();
        ButtonHapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ButtonData = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabel2 = new javax.swing.JTable();
        button1 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hapus Data Dokumentasi Proyek\n", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        FieldCari.setPreferredSize(new java.awt.Dimension(250, 25));
        FieldCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldCariActionPerformed(evt);
            }
        });
        FieldCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FieldCariKeyReleased(evt);
            }
        });

        Tabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode Proyek", "Nama Proyek", "Project Charter", "Waktu", "Project Plan", "Waktu", "Keterangan ", "Customer"
            }
        ));
        jScrollPane1.setViewportView(Tabel1);

        ButtonHapus.setText("Hapus");
        ButtonHapus.setPreferredSize(new java.awt.Dimension(63, 25));

        jLabel1.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        jLabel1.setText("Pencarian");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1314, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lihat Semua Data Dokumentasi Proyek", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        ButtonData.setText("Lihat Data Proyek");
        ButtonData.setPreferredSize(new java.awt.Dimension(99, 25));

        Tabel2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode Proyek", "Nama Proyek", "Project Charter", "Waktu", "Project Plan", "Waktu", "Keterangan", "Customer"
            }
        ));
        Tabel2.setEnabled(false);
        jScrollPane2.setViewportView(Tabel2);

        button1.setLabel("button1");
        button1.setName("Cetak\n"); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1314, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ButtonData, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ButtonData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(328, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName("Hapus Data Proyek");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FieldCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldCariKeyReleased
        // TODO add your handling code here:
        String query ="select * from dokumen where nama like '%"+FieldCari.getText()+"%' || kodeProyek like '%"+FieldCari.getText()+"%' || Keterangan like '%"+FieldCari.getText()+"%'";
        fetchData(query);
        String[] kolom={"Kode Proyek","Nama","Project Charter","Waktu","Project Plan","Waktu","Keterangan","Customer"};
        String[][] data = new String[dkm.length][100];
        for (int i = 0; i < dkm.length; i++) {
            data[i][0]=dkm[i].getKodeProyek();
            data[i][1]=dkm[i].getNama();
            data[i][2]=dkm[i].getProjectCharter();
            data[i][3]=dkm[i].getWaktuCharter();
            data[i][4]=dkm[i].getProjectPlan();
            data[i][5]=dkm[i].getWaktuPlan();
            data[i][6]=dkm[i].getKeterangan();
            data[i][7]=dkm[i].getCustomer();
        }
        DefaultTableModel dtm=new DefaultTableModel(data, kolom);
        Tabel1.setModel(dtm);
    }//GEN-LAST:event_FieldCariKeyReleased

    private void FieldCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldCariActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        try{
        MessageFormat judul =new MessageFormat("AI");
        MessageFormat jul =new MessageFormat("AslI");
        try{
        Tabel2.print(JTable.PrintMode.FIT_WIDTH, judul, jul);
        }catch(Exception e){
            
        }
        }catch(Exception e){
        }
    }//GEN-LAST:event_button1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DialogHapusProyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DialogHapusProyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DialogHapusProyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DialogHapusProyek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DialogHapusProyek dialog = new DialogHapusProyek(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    final public void fetchData(String query){
        try {
            db = new DataBase();
            ResultSet result;                      
            result = db.getData(query);
            int i=0;
            try {
              while(result.next()) i++;
            } catch (SQLException ex) {
                Logger.getLogger(DialogEditProyek.class.getName()).log(Level.SEVERE, null, ex);
            }
           dkm = new Dokumen[i];
           result = db.getData(query);             
           i=0;
           while(result.next()){                   
                dkm[i]=new Dokumen();
                dkm[i].setKodeProyek(result.getString(1));
                dkm[i].setNama(result.getString(2));
                dkm[i].setProjectCharter(result.getString(3));
                dkm[i].setWaktuCharter(result.getString(4));
                dkm[i].setProjectPlan(result.getString(5));
                dkm[i].setWaktuPlan(result.getString(6));
                dkm[i].setKeterangan(result.getString(7));
                dkm[i].setCustomer(result.getString(8));
                i++;
            }                
        } catch (SQLException ex) {
            Logger.getLogger(DialogEditProyek.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
    private class Data implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent ae){                        
            String query ="select * from dokumen";
            fetchData(query);
            String[] kolom={"Kode Proyek","Nama","Project Charter","Waktu","Project Plan","Waktu","Keterangan","Customer"};
            String[][] data = new String[dkm.length][100];           
            for (int i = 0; i < dkm.length; i++) {
            data[i][0]=dkm[i].getKodeProyek();
            data[i][1]=dkm[i].getNama();
            data[i][2]=dkm[i].getProjectCharter();
            data[i][3]=dkm[i].getWaktuCharter();
            data[i][4]=dkm[i].getProjectPlan();
            data[i][5]=dkm[i].getWaktuPlan();
            data[i][6]=dkm[i].getKeterangan();
            data[i][7]=dkm[i].getCustomer();
            }
            DefaultTableModel dtm=new DefaultTableModel(data, kolom);
            Tabel2.setModel(dtm);          
         }                        
    }
    private class Hapus implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent ae){                        
            try{
                if(Tabel1.getSelectedRow()!= -1){
                    dk.setKodeProyek(Tabel1.getValueAt(Tabel1.getSelectedRow(), 0).toString());
                    try {
                        dk.deleteDokumen();
                    } catch (SQLException ex) {
                        Logger.getLogger(DialogHapusDokumentasi.class.getName()).log(Level.SEVERE, null, ex);
                    }                    
                    javax.swing.JOptionPane.showMessageDialog(null,"Data Berhasil Dihapus");
                }
            }catch(HeadlessException e){
                JOptionPane.showMessageDialog(null,"Pilih data terlebih dahulu");
            }         
         }                        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonData;
    private javax.swing.JButton ButtonHapus;
    private javax.swing.JTextField FieldCari;
    private javax.swing.JTable Tabel1;
    private javax.swing.JTable Tabel2;
    private java.awt.Button button1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
